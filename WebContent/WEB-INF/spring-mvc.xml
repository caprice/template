<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">



	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.gm.infobus"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 解决json乱码 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<bean id="jacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>

    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="UTF-8"/>  
        <!-- 指定所上传文件的总大小不能超过1000KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
        <property name="maxUploadSize" value="1000000"/>  
      	<property name="maxInMemorySize" value="2048"/>  
    </bean>  

	<mvc:annotation-driven />

	<!-- 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />
	
<!-- 配置拦截器
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/user/login/**" />
			<mvc:mapping path="/user/verifyAccount/**" />
			<mvc:mapping path="/user/verifyPlate/**" />
			<bean class="com.gm.infobus.interceptor.UserTokenInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
  -->
  
	<!-- 定义JSP文件的位置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 定义无Controller的path<->view直接映射 <mvc:view-controller path="/" view-name="index"/> 
		<mvc:view-controller path="/web/mashup-client" view-name="/web/mashup-client"/> 
		<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<property name="exceptionMappings"> <props> <prop key="org.springframework.validation.BindException">error/400</prop> 
		<prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop> 
		</props> </property> </bean> -->


	<!-- 全局异常配置 start -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">/errors/error</prop>
				<prop key="java.lang.Throwable">/errors/err</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="/errors/error">500</prop>
				<prop key="/errors/404">404</prop>
			</props>
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="WARN"></property>
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="/errors/error"></property>
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"></property>
	</bean>
	<!-- 全局异常配置 end -->
	<!-- end -->
</beans>
